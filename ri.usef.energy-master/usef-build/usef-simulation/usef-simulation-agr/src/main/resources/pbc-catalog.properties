#
# Copyright 2015-2016 USEF Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# This file is used by the USEF implementation to resolve the pluggable business components to be used by the aggregator.
#
# The keys used in this file must be defined as a value in AgrWorkflowStep.
#

# Implementation for the workflow step Create Connection Profile.
AGR_CREATE_CONNECTION_PROFILE=energy.usef.agr.workflow.step.AgrCreateConnectionProfileStub

# Implementation for the workflow step Create N-Day Ahead Forecast.
AGR_CREATE_N_DAY_AHEAD_FORECAST=energy.usef.agr.workflow.step.AgrCreateNDayAheadForecastStub

# Implementation for the workflow step Create NON-UDI N-Day Ahead Forecast.
AGR_NON_UDI_CREATE_N_DAY_AHEAD_FORECAST=energy.usef.agr.workflow.step.AgrNonUdiCreateNDayAheadForecastStub

# Implementation for the workflow step Create UDI.
AGR_CREATE_UDI=energy.usef.agr.workflow.step.AgrCreateUdiStub

# Implementation for the workflow step Identify Change In Forecast.
AGR_IDENTIFY_CHANGE_IN_FORECAST=energy.usef.agr.workflow.step.AgrIdentifyChangeInForecastStub

# Implementation for the workflow step Update Element Data Store.
AGR_UPDATE_ELEMENT_DATA_STORE=energy.usef.agr.workflow.step.AgrUpdateElementDataStoreStub

# Implementation for the workflow step (Re-)Optimize Portfolio.
AGR_REOPTIMIZE_PORTFOLIO=energy.usef.agr.workflow.step.AgrReOptimizePortfolioStub

# Implementation for the workflow step NON UDI (Re-)Optimize Portfolio.
AGR_NON_UDI_REOPTIMIZE_PORTFOLIO=energy.usef.agr.workflow.step.AgrNonUdiReOptimizePortfolioStub

# Implementation for the workflow step (Re-)Create Prognoses.
AGR_RECREATE_PROGNOSES=energy.usef.agr.workflow.step.AgrReCreatePrognosesStub

# Implementation for the workflow step Flex Offer Determine Flexibility.
AGR_FLEX_OFFER_DETERMINE_FLEXIBILITY=energy.usef.agr.workflow.step.AgrFlexOfferDetermineFlexibilityStub

# Implementation for the workflow step Initiate Settlement.
AGR_INITIATE_SETTLEMENT=energy.usef.agr.workflow.step.AgrInitiateSettlementStub

# Implementation for the workflow step Validate Settlement Items.
AGR_VALIDATE_SETTLEMENT_ITEMS=energy.usef.agr.workflow.step.AgrValidateSettlementItemsStub

# Implementation for the workflow step Determine Net Demands.
AGR_DETERMINE_NET_DEMANDS=energy.usef.agr.workflow.step.AgrDetermineNetDemandsStub

# Implementation for the workflow step Detect Deviation From Prognosis.
AGR_DETECT_DEVIATION_FROM_PROGNOSES=energy.usef.agr.workflow.step.AgrDetectDeviationFromPrognosesStub

# Implementation for the workflow step Control Active Demand Supply.
AGR_CONTROL_ACTIVE_DEMAND_SUPPLY=energy.usef.agr.workflow.step.AgrControlActiveDemandSupplyStub

# Implementation for the workflow step Initialize Non-Udi Clusters.
AGR_INITIALIZE_NON_UDI_CLUSTERS=energy.usef.agr.workflow.step.AgrInitializeNonUdiClustersStub

# Implementation for the workflow step Set ADS Goals for Non-Udi aggregators.
AGR_NON_UDI_SET_ADS_GOALS=energy.usef.agr.workflow.step.AgrNonUdiSetAdsGoalsStub

# Implementation for the workflow step Non-UDI Retrieve ADS Goal Realization
AGR_NON_UDI_RETRIEVE_ADS_GOAL_REALIZATION=energy.usef.agr.workflow.step.AgrNonUdiRetrieveAdsGoalRealizationStub

# Implementation for the workflow step Non-UDI Detect Deviations from A-Plans and/or D-Prognoses
AGR_NON_UDI_DETECT_DEVIATION_FROM_PROGNOSES=energy.usef.agr.workflow.step.AgrNonUdiDetectDeviationFromPrognosesStub
